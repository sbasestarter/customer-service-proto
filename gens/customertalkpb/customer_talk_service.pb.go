// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.18.1
// source: proto/customer_talk_service.proto

package customertalkpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TalkStatus int32

const (
	TalkStatus_TALK_STATUS_UNSPECIFIED TalkStatus = 0
	TalkStatus_TALK_STATUS_OPENED      TalkStatus = 1
	TalkStatus_TALK_STATUS_CLOSED      TalkStatus = 2
)

// Enum value maps for TalkStatus.
var (
	TalkStatus_name = map[int32]string{
		0: "TALK_STATUS_UNSPECIFIED",
		1: "TALK_STATUS_OPENED",
		2: "TALK_STATUS_CLOSED",
	}
	TalkStatus_value = map[string]int32{
		"TALK_STATUS_UNSPECIFIED": 0,
		"TALK_STATUS_OPENED":      1,
		"TALK_STATUS_CLOSED":      2,
	}
)

func (x TalkStatus) Enum() *TalkStatus {
	p := new(TalkStatus)
	*p = x
	return p
}

func (x TalkStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TalkStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_customer_talk_service_proto_enumTypes[0].Descriptor()
}

func (TalkStatus) Type() protoreflect.EnumType {
	return &file_proto_customer_talk_service_proto_enumTypes[0]
}

func (x TalkStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TalkStatus.Descriptor instead.
func (TalkStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_customer_talk_service_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_customer_talk_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_customer_talk_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_customer_talk_service_proto_rawDescGZIP(), []int{0}
}

type TalkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TalkId     string     `protobuf:"bytes,1,opt,name=talk_id,json=talkId,proto3" json:"talk_id,omitempty"`
	Status     TalkStatus `protobuf:"varint,2,opt,name=status,proto3,enum=TalkStatus" json:"status,omitempty"`
	Title      string     `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	StartedAt  uint64     `protobuf:"varint,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	FinishedAt uint64     `protobuf:"varint,5,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
}

func (x *TalkInfo) Reset() {
	*x = TalkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_customer_talk_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkInfo) ProtoMessage() {}

func (x *TalkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_customer_talk_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkInfo.ProtoReflect.Descriptor instead.
func (*TalkInfo) Descriptor() ([]byte, []int) {
	return file_proto_customer_talk_service_proto_rawDescGZIP(), []int{1}
}

func (x *TalkInfo) GetTalkId() string {
	if x != nil {
		return x.TalkId
	}
	return ""
}

func (x *TalkInfo) GetStatus() TalkStatus {
	if x != nil {
		return x.Status
	}
	return TalkStatus_TALK_STATUS_UNSPECIFIED
}

func (x *TalkInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TalkInfo) GetStartedAt() uint64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *TalkInfo) GetFinishedAt() uint64 {
	if x != nil {
		return x.FinishedAt
	}
	return 0
}

type QueryTalksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statuses []TalkStatus `protobuf:"varint,1,rep,packed,name=statuses,proto3,enum=TalkStatus" json:"statuses,omitempty"`
}

func (x *QueryTalksRequest) Reset() {
	*x = QueryTalksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_customer_talk_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTalksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTalksRequest) ProtoMessage() {}

func (x *QueryTalksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_customer_talk_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTalksRequest.ProtoReflect.Descriptor instead.
func (*QueryTalksRequest) Descriptor() ([]byte, []int) {
	return file_proto_customer_talk_service_proto_rawDescGZIP(), []int{2}
}

func (x *QueryTalksRequest) GetStatuses() []TalkStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type QueryTalksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Talks []*TalkInfo `protobuf:"bytes,1,rep,name=talks,proto3" json:"talks,omitempty"`
}

func (x *QueryTalksResponse) Reset() {
	*x = QueryTalksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_customer_talk_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTalksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTalksResponse) ProtoMessage() {}

func (x *QueryTalksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_customer_talk_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTalksResponse.ProtoReflect.Descriptor instead.
func (*QueryTalksResponse) Descriptor() ([]byte, []int) {
	return file_proto_customer_talk_service_proto_rawDescGZIP(), []int{3}
}

func (x *QueryTalksResponse) GetTalks() []*TalkInfo {
	if x != nil {
		return x.Talks
	}
	return nil
}

type TalkMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	At              uint64 `protobuf:"varint,2,opt,name=at,proto3" json:"at,omitempty"`
	CustomerMessage bool   `protobuf:"varint,3,opt,name=customer_message,json=customerMessage,proto3" json:"customer_message,omitempty"`
	// Types that are assignable to Message:
	//	*TalkMessage_Text
	//	*TalkMessage_Image
	Message isTalkMessage_Message `protobuf_oneof:"Message"`
}

func (x *TalkMessage) Reset() {
	*x = TalkMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_customer_talk_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkMessage) ProtoMessage() {}

func (x *TalkMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_customer_talk_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkMessage.ProtoReflect.Descriptor instead.
func (*TalkMessage) Descriptor() ([]byte, []int) {
	return file_proto_customer_talk_service_proto_rawDescGZIP(), []int{4}
}

func (x *TalkMessage) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *TalkMessage) GetAt() uint64 {
	if x != nil {
		return x.At
	}
	return 0
}

func (x *TalkMessage) GetCustomerMessage() bool {
	if x != nil {
		return x.CustomerMessage
	}
	return false
}

func (m *TalkMessage) GetMessage() isTalkMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *TalkMessage) GetText() string {
	if x, ok := x.GetMessage().(*TalkMessage_Text); ok {
		return x.Text
	}
	return ""
}

func (x *TalkMessage) GetImage() []byte {
	if x, ok := x.GetMessage().(*TalkMessage_Image); ok {
		return x.Image
	}
	return nil
}

type isTalkMessage_Message interface {
	isTalkMessage_Message()
}

type TalkMessage_Text struct {
	Text string `protobuf:"bytes,20,opt,name=text,proto3,oneof"`
}

type TalkMessage_Image struct {
	Image []byte `protobuf:"bytes,21,opt,name=image,proto3,oneof"`
}

func (*TalkMessage_Text) isTalkMessage_Message() {}

func (*TalkMessage_Image) isTalkMessage_Message() {}

type TalkCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *TalkCreateRequest) Reset() {
	*x = TalkCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_customer_talk_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkCreateRequest) ProtoMessage() {}

func (x *TalkCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_customer_talk_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkCreateRequest.ProtoReflect.Descriptor instead.
func (*TalkCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_customer_talk_service_proto_rawDescGZIP(), []int{5}
}

func (x *TalkCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type TalkOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TalkId string `protobuf:"bytes,1,opt,name=talk_id,json=talkId,proto3" json:"talk_id,omitempty"`
}

func (x *TalkOpenRequest) Reset() {
	*x = TalkOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_customer_talk_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkOpenRequest) ProtoMessage() {}

func (x *TalkOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_customer_talk_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkOpenRequest.ProtoReflect.Descriptor instead.
func (*TalkOpenRequest) Descriptor() ([]byte, []int) {
	return file_proto_customer_talk_service_proto_rawDescGZIP(), []int{6}
}

func (x *TalkOpenRequest) GetTalkId() string {
	if x != nil {
		return x.TalkId
	}
	return ""
}

type TalkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Talk:
	//	*TalkRequest_Create
	//	*TalkRequest_Open
	//	*TalkRequest_Message
	Talk isTalkRequest_Talk `protobuf_oneof:"Talk"`
}

func (x *TalkRequest) Reset() {
	*x = TalkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_customer_talk_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkRequest) ProtoMessage() {}

func (x *TalkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_customer_talk_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkRequest.ProtoReflect.Descriptor instead.
func (*TalkRequest) Descriptor() ([]byte, []int) {
	return file_proto_customer_talk_service_proto_rawDescGZIP(), []int{7}
}

func (m *TalkRequest) GetTalk() isTalkRequest_Talk {
	if m != nil {
		return m.Talk
	}
	return nil
}

func (x *TalkRequest) GetCreate() *TalkCreateRequest {
	if x, ok := x.GetTalk().(*TalkRequest_Create); ok {
		return x.Create
	}
	return nil
}

func (x *TalkRequest) GetOpen() *TalkOpenRequest {
	if x, ok := x.GetTalk().(*TalkRequest_Open); ok {
		return x.Open
	}
	return nil
}

func (x *TalkRequest) GetMessage() *TalkMessage {
	if x, ok := x.GetTalk().(*TalkRequest_Message); ok {
		return x.Message
	}
	return nil
}

type isTalkRequest_Talk interface {
	isTalkRequest_Talk()
}

type TalkRequest_Create struct {
	Create *TalkCreateRequest `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type TalkRequest_Open struct {
	Open *TalkOpenRequest `protobuf:"bytes,2,opt,name=open,proto3,oneof"`
}

type TalkRequest_Message struct {
	Message *TalkMessage `protobuf:"bytes,3,opt,name=message,proto3,oneof"`
}

func (*TalkRequest_Create) isTalkRequest_Talk() {}

func (*TalkRequest_Open) isTalkRequest_Talk() {}

func (*TalkRequest_Message) isTalkRequest_Talk() {}

type TalkMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*TalkMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *TalkMessages) Reset() {
	*x = TalkMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_customer_talk_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkMessages) ProtoMessage() {}

func (x *TalkMessages) ProtoReflect() protoreflect.Message {
	mi := &file_proto_customer_talk_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkMessages.ProtoReflect.Descriptor instead.
func (*TalkMessages) Descriptor() ([]byte, []int) {
	return file_proto_customer_talk_service_proto_rawDescGZIP(), []int{8}
}

func (x *TalkMessages) GetMessages() []*TalkMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type TalkMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TalkMessageReply) Reset() {
	*x = TalkMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_customer_talk_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkMessageReply) ProtoMessage() {}

func (x *TalkMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_customer_talk_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkMessageReply.ProtoReflect.Descriptor instead.
func (*TalkMessageReply) Descriptor() ([]byte, []int) {
	return file_proto_customer_talk_service_proto_rawDescGZIP(), []int{9}
}

type TalkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Talk:
	//	*TalkResponse_Messages
	//	*TalkResponse_Message
	//	*TalkResponse_Reply
	Talk isTalkResponse_Talk `protobuf_oneof:"Talk"`
}

func (x *TalkResponse) Reset() {
	*x = TalkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_customer_talk_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkResponse) ProtoMessage() {}

func (x *TalkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_customer_talk_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkResponse.ProtoReflect.Descriptor instead.
func (*TalkResponse) Descriptor() ([]byte, []int) {
	return file_proto_customer_talk_service_proto_rawDescGZIP(), []int{10}
}

func (m *TalkResponse) GetTalk() isTalkResponse_Talk {
	if m != nil {
		return m.Talk
	}
	return nil
}

func (x *TalkResponse) GetMessages() *TalkMessages {
	if x, ok := x.GetTalk().(*TalkResponse_Messages); ok {
		return x.Messages
	}
	return nil
}

func (x *TalkResponse) GetMessage() *TalkMessage {
	if x, ok := x.GetTalk().(*TalkResponse_Message); ok {
		return x.Message
	}
	return nil
}

func (x *TalkResponse) GetReply() *TalkMessageReply {
	if x, ok := x.GetTalk().(*TalkResponse_Reply); ok {
		return x.Reply
	}
	return nil
}

type isTalkResponse_Talk interface {
	isTalkResponse_Talk()
}

type TalkResponse_Messages struct {
	Messages *TalkMessages `protobuf:"bytes,1,opt,name=messages,proto3,oneof"`
}

type TalkResponse_Message struct {
	Message *TalkMessage `protobuf:"bytes,2,opt,name=message,proto3,oneof"`
}

type TalkResponse_Reply struct {
	Reply *TalkMessageReply `protobuf:"bytes,3,opt,name=reply,proto3,oneof"`
}

func (*TalkResponse_Messages) isTalkResponse_Talk() {}

func (*TalkResponse_Message) isTalkResponse_Talk() {}

func (*TalkResponse_Reply) isTalkResponse_Talk() {}

var File_proto_customer_talk_service_proto protoreflect.FileDescriptor

var file_proto_customer_talk_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x9e, 0x01, 0x0a,
	0x08, 0x54, 0x61, 0x6c, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x6c,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x6c, 0x6b,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3c, 0x0a,
	0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x6c, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x12, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x6c, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x05, 0x74, 0x61, 0x6c, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x61, 0x6c,
	0x6b, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x54, 0x61, 0x6c, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x61, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x54, 0x61,
	0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x2a, 0x0a, 0x0f, 0x54, 0x61, 0x6c, 0x6b, 0x4f, 0x70, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x6c, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x6c, 0x6b, 0x49,
	0x64, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x26, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x54, 0x61, 0x6c, 0x6b, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x06, 0x0a, 0x04, 0x54, 0x61, 0x6c, 0x6b, 0x22, 0x38, 0x0a, 0x0c, 0x54, 0x61, 0x6c,
	0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x61,
	0x6c, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x54, 0x61, 0x6c, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x98, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x6c, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x61, 0x6c,
	0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x29, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x54, 0x61,
	0x6c, 0x6b, 0x2a, 0x59, 0x0a, 0x0a, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x4c, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x54, 0x41, 0x4c, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x50, 0x45,
	0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x41, 0x4c, 0x4b, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x02, 0x32, 0x79, 0x0a,
	0x13, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x6c,
	0x6b, 0x73, 0x12, 0x12, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x6c, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61,
	0x6c, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x29, 0x0a,
	0x04, 0x54, 0x61, 0x6c, 0x6b, 0x12, 0x0c, 0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x8d, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d,
	0x2e, 0x70, 0x61, 0x74, 0x64, 0x7a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x74,
	0x61, 0x6c, 0x6b, 0x42, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x61, 0x6c,
	0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x67, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x73, 0x2f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x74, 0x61, 0x6c, 0x6b, 0x70, 0x62, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x74, 0x61, 0x6c, 0x6b, 0x70, 0x62, 0x3b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x74, 0x61, 0x6c, 0x6b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_customer_talk_service_proto_rawDescOnce sync.Once
	file_proto_customer_talk_service_proto_rawDescData = file_proto_customer_talk_service_proto_rawDesc
)

func file_proto_customer_talk_service_proto_rawDescGZIP() []byte {
	file_proto_customer_talk_service_proto_rawDescOnce.Do(func() {
		file_proto_customer_talk_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_customer_talk_service_proto_rawDescData)
	})
	return file_proto_customer_talk_service_proto_rawDescData
}

var file_proto_customer_talk_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_customer_talk_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_customer_talk_service_proto_goTypes = []interface{}{
	(TalkStatus)(0),            // 0: TalkStatus
	(*Empty)(nil),              // 1: Empty
	(*TalkInfo)(nil),           // 2: TalkInfo
	(*QueryTalksRequest)(nil),  // 3: QueryTalksRequest
	(*QueryTalksResponse)(nil), // 4: QueryTalksResponse
	(*TalkMessage)(nil),        // 5: TalkMessage
	(*TalkCreateRequest)(nil),  // 6: TalkCreateRequest
	(*TalkOpenRequest)(nil),    // 7: TalkOpenRequest
	(*TalkRequest)(nil),        // 8: TalkRequest
	(*TalkMessages)(nil),       // 9: TalkMessages
	(*TalkMessageReply)(nil),   // 10: TalkMessageReply
	(*TalkResponse)(nil),       // 11: TalkResponse
}
var file_proto_customer_talk_service_proto_depIdxs = []int32{
	0,  // 0: TalkInfo.status:type_name -> TalkStatus
	0,  // 1: QueryTalksRequest.statuses:type_name -> TalkStatus
	2,  // 2: QueryTalksResponse.talks:type_name -> TalkInfo
	6,  // 3: TalkRequest.create:type_name -> TalkCreateRequest
	7,  // 4: TalkRequest.open:type_name -> TalkOpenRequest
	5,  // 5: TalkRequest.message:type_name -> TalkMessage
	5,  // 6: TalkMessages.messages:type_name -> TalkMessage
	9,  // 7: TalkResponse.messages:type_name -> TalkMessages
	5,  // 8: TalkResponse.message:type_name -> TalkMessage
	10, // 9: TalkResponse.reply:type_name -> TalkMessageReply
	3,  // 10: CustomerTalkService.QueryTalks:input_type -> QueryTalksRequest
	8,  // 11: CustomerTalkService.Talk:input_type -> TalkRequest
	4,  // 12: CustomerTalkService.QueryTalks:output_type -> QueryTalksResponse
	11, // 13: CustomerTalkService.Talk:output_type -> TalkResponse
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_customer_talk_service_proto_init() }
func file_proto_customer_talk_service_proto_init() {
	if File_proto_customer_talk_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_customer_talk_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_customer_talk_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_customer_talk_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTalksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_customer_talk_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTalksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_customer_talk_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_customer_talk_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_customer_talk_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_customer_talk_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_customer_talk_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_customer_talk_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_customer_talk_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_customer_talk_service_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*TalkMessage_Text)(nil),
		(*TalkMessage_Image)(nil),
	}
	file_proto_customer_talk_service_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*TalkRequest_Create)(nil),
		(*TalkRequest_Open)(nil),
		(*TalkRequest_Message)(nil),
	}
	file_proto_customer_talk_service_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*TalkResponse_Messages)(nil),
		(*TalkResponse_Message)(nil),
		(*TalkResponse_Reply)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_customer_talk_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_customer_talk_service_proto_goTypes,
		DependencyIndexes: file_proto_customer_talk_service_proto_depIdxs,
		EnumInfos:         file_proto_customer_talk_service_proto_enumTypes,
		MessageInfos:      file_proto_customer_talk_service_proto_msgTypes,
	}.Build()
	File_proto_customer_talk_service_proto = out.File
	file_proto_customer_talk_service_proto_rawDesc = nil
	file_proto_customer_talk_service_proto_goTypes = nil
	file_proto_customer_talk_service_proto_depIdxs = nil
}
